
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- üîê Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/roles/$(request.auth.uid))
        && get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role == "admin";
    }

    // --- üë§ USERS & ROLES ---
    match /users/{userId} {
      allow read, write: if isOwner(userId);

      // --- üß† ZIZO MODULES (All nested under /users/{userId}) ---
      // This single rule covers all user-owned data securely.
      match /{document=**} {
        allow read, write: if isOwner(userId);
      }
    }

    match /roles/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isAdmin();
    }

    // --- ‚öôÔ∏è GLOBAL CONFIG ---
    match /config/modules {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // --- üìà ECONOSIM (Global scenarios, user-owned simulations) ---
    match /econosim_scenarios/{scenarioId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /econosim_simulations/{simId} {
      allow read: if isSignedIn() && resource.data.uid == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow update: if isSignedIn() && resource.data.uid == request.auth.uid;
      allow delete: if false; // Simulations are immutable records
    }
  }
}
